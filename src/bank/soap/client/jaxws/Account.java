
package bank.soap.client.jaxws;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "Account", targetNamespace = "http://soap.bank/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Account {


    /**
     * 
     * @return
     *     returns java.lang.String
     * @throws IOException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getNumber", targetNamespace = "http://soap.bank/", className = "bank.soap.client.jaxws.GetNumber")
    @ResponseWrapper(localName = "getNumberResponse", targetNamespace = "http://soap.bank/", className = "bank.soap.client.jaxws.GetNumberResponse")
    @Action(input = "http://soap.bank/Account/getNumberRequest", output = "http://soap.bank/Account/getNumberResponse", fault = {
        @FaultAction(className = IOException_Exception.class, value = "http://soap.bank/Account/getNumber/Fault/IOException")
    })
    public String getNumber()
        throws IOException_Exception
    ;

    /**
     * 
     * @return
     *     returns java.lang.String
     * @throws IOException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getOwner", targetNamespace = "http://soap.bank/", className = "bank.soap.client.jaxws.GetOwner")
    @ResponseWrapper(localName = "getOwnerResponse", targetNamespace = "http://soap.bank/", className = "bank.soap.client.jaxws.GetOwnerResponse")
    @Action(input = "http://soap.bank/Account/getOwnerRequest", output = "http://soap.bank/Account/getOwnerResponse", fault = {
        @FaultAction(className = IOException_Exception.class, value = "http://soap.bank/Account/getOwner/Fault/IOException")
    })
    public String getOwner()
        throws IOException_Exception
    ;

    /**
     * 
     * @param name
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "sayHello", targetNamespace = "http://soap.bank/", className = "bank.soap.client.jaxws.SayHello")
    @ResponseWrapper(localName = "sayHelloResponse", targetNamespace = "http://soap.bank/", className = "bank.soap.client.jaxws.SayHelloResponse")
    @Action(input = "http://soap.bank/Account/sayHelloRequest", output = "http://soap.bank/Account/sayHelloResponse")
    public String sayHello(
        @WebParam(name = "name", targetNamespace = "")
        String name);

    /**
     * 
     * @return
     *     returns boolean
     * @throws IOException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "isActive", targetNamespace = "http://soap.bank/", className = "bank.soap.client.jaxws.IsActive")
    @ResponseWrapper(localName = "isActiveResponse", targetNamespace = "http://soap.bank/", className = "bank.soap.client.jaxws.IsActiveResponse")
    @Action(input = "http://soap.bank/Account/isActiveRequest", output = "http://soap.bank/Account/isActiveResponse", fault = {
        @FaultAction(className = IOException_Exception.class, value = "http://soap.bank/Account/isActive/Fault/IOException")
    })
    public boolean isActive()
        throws IOException_Exception
    ;

    /**
     * 
     * @param arg0
     * @throws IOException_Exception
     * @throws InactiveException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "deposit", targetNamespace = "http://soap.bank/", className = "bank.soap.client.jaxws.Deposit")
    @ResponseWrapper(localName = "depositResponse", targetNamespace = "http://soap.bank/", className = "bank.soap.client.jaxws.DepositResponse")
    @Action(input = "http://soap.bank/Account/depositRequest", output = "http://soap.bank/Account/depositResponse", fault = {
        @FaultAction(className = IOException_Exception.class, value = "http://soap.bank/Account/deposit/Fault/IOException"),
        @FaultAction(className = InactiveException_Exception.class, value = "http://soap.bank/Account/deposit/Fault/InactiveException")
    })
    public void deposit(
        @WebParam(name = "arg0", targetNamespace = "")
        double arg0)
        throws IOException_Exception, InactiveException_Exception
    ;

    /**
     * 
     * @param arg0
     * @throws IOException_Exception
     * @throws OverdrawException_Exception
     * @throws InactiveException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "withdraw", targetNamespace = "http://soap.bank/", className = "bank.soap.client.jaxws.Withdraw")
    @ResponseWrapper(localName = "withdrawResponse", targetNamespace = "http://soap.bank/", className = "bank.soap.client.jaxws.WithdrawResponse")
    @Action(input = "http://soap.bank/Account/withdrawRequest", output = "http://soap.bank/Account/withdrawResponse", fault = {
        @FaultAction(className = IOException_Exception.class, value = "http://soap.bank/Account/withdraw/Fault/IOException"),
        @FaultAction(className = OverdrawException_Exception.class, value = "http://soap.bank/Account/withdraw/Fault/OverdrawException"),
        @FaultAction(className = InactiveException_Exception.class, value = "http://soap.bank/Account/withdraw/Fault/InactiveException")
    })
    public void withdraw(
        @WebParam(name = "arg0", targetNamespace = "")
        double arg0)
        throws IOException_Exception, InactiveException_Exception, OverdrawException_Exception
    ;

    /**
     * 
     * @return
     *     returns double
     * @throws IOException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getBalance", targetNamespace = "http://soap.bank/", className = "bank.soap.client.jaxws.GetBalance")
    @ResponseWrapper(localName = "getBalanceResponse", targetNamespace = "http://soap.bank/", className = "bank.soap.client.jaxws.GetBalanceResponse")
    @Action(input = "http://soap.bank/Account/getBalanceRequest", output = "http://soap.bank/Account/getBalanceResponse", fault = {
        @FaultAction(className = IOException_Exception.class, value = "http://soap.bank/Account/getBalance/Fault/IOException")
    })
    public double getBalance()
        throws IOException_Exception
    ;

}
